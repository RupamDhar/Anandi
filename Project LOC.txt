import React from 'react'
import ReactDOM from 'react-dom/client'
import { createBrowserRouter, RouterProvider } from 'react-router-dom'
import App from './App.jsx'
import ProductPage from './ProductPage.jsx'
import WelcomePage from './WelcomePage.jsx'
import './index.css'

const router = createBrowserRouter([
  {
    path: '/',
    element: <WelcomePage/>
  },
  {
    path: '/home',
    element: <App/>
  },
  {
    path: 'product/:id',
    element: <ProductPage/>
  },
  {
    path: '*',
    element: <>Error 404</>
  }
])

ReactDOM.createRoot(document.getElementById('root')).render(
  // <React.StrictMode>
  <RouterProvider router={router} />
  // </React.StrictMode>,
)
import React from 'react'
import './WelcomePage.css'

const WelcomePage = () => {


    function categoryClickHandler(event) {
        const category = event.currentTarget.querySelector('.category-text').innerText.replace(/s$/, '');
        console.log(category);
        window.location.href = `/home?search=${category}`;
    }


    return (
        <div className="welcome-page">
            {/* hero section */}
            <div className="hero-section">
                <div className="hero-info-section">
                    <div><img id='anandi-welcome-page' src="anandi-logo.png" alt="" /></div>
                    <div className="hero-section-text">
                        ELEGANCE. COMFORT. <br />
                        AFFORDABILITY. <br />
                        <div className="sub-text">All in one.</div>
                    </div>
                    <a id='shop-now-btn' href="/home">Shop Now</a>
                </div>
                <div className="gradient-welcome-image-section">
                    <div id="gradient-mask"></div>
                    <img id='shop-image' src="shop-name-image.jpg" alt="" />
                </div>
            </div>

            {/* category section */}
            <div className="welcome-category-section-wrapper">
                <div className="welcome-category-section">
                    <div className="welcome-category-title">Shop for</div>
                    <div className="welcome-categories">
                        <div className="welcome-category kurtis" onClick={categoryClickHandler}>
                            <img className='category-image' src="kurti-image.jpg" alt="" />
                            <div className="category-text">Kurtis</div>
                        </div>
                        <div className="welcome-category leggings" onClick={categoryClickHandler}>
                            <img className='category-image' src="nightwear-image.jpg" alt="" />
                            <div className="category-text">Leggings</div>
                        </div>
                        <div className="welcome-category palazzos" onClick={categoryClickHandler}>
                            <img className='category-image' src="nightwear-image.jpg" alt="" />
                            <div className="category-text">Palazzos</div>
                        </div>
                        <div className="welcome-category housecoats" onClick={categoryClickHandler}>
                            <img className='category-image' src="nightwear-image.jpg" alt="" />
                            <div className="category-text">House-coats</div>
                        </div>
                        <div className="welcome-category nightwear" onClick={categoryClickHandler}>
                            <img className='category-image' src="nightwear-image.jpg" alt="" />
                            <div className="category-text">Nightwears</div>
                        </div>
                    </div>
                </div>
            </div>

            {/* shop information */}
            <div className="shop-info-section">
                <div className="shop-info shop-location">
                    <div className="shop-info-heading shop-location-text">Shop Location</div>
                    <div className="shop-info-text">53, Shyam Nagar Road, Kolkata - 700 055</div>
                    <iframe
                        src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3683.1125331596277!2d88.4148440746886!3d22.612272531516357!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x39f89e1e201b6629%3A0x370df84054d7d4b6!2s53%2C%20Shyam%20Nagar%20Rd%2C%20Satgachi%2C%20Baguiati%2C%20South%20Dumdum%2C%20West%20Bengal%20700055!5e0!3m2!1sen!2sin!4v1716826947798!5m2!1sen!2sin"
                        
                        style={{ border: 0 }}
                        allowFullScreen=""
                        loading="lazy"
                        referrerPolicy="no-referrer-when-downgrade"
                    />
                </div>
                <div className="shop-info reach-us-at">
                    <div className="shop-info-heading reach-us-at-text">Reach Us at</div>
                    <div className="shop-info-text"><b>Email:</b> anandiwears@gmail.com</div>
                    <div className="shop-info-text"><b>Contact:</b> +91 9007724730 / +91 8582802440</div>
                    <div className="social-container">
                        <i className="fa-brands fa-square-whatsapp welcome-socials"></i>
                        <i className="fa-brands fa-facebook welcome-socials"></i>
                        <a href="https://www.instagram.com/anandiwears/" target='_blank'><i className="fa-brands fa-square-instagram welcome-socials"></i></a>
                    </div>
                </div>
            </div>

            <br /><br /><br /><br />

            <div className="welcome-page-footer">
                Â©2024 Anandi. All Rights Reserved.
            </div>
        </div>
    )
}

export default WelcomePage
@media (max-width:1080px) {

 /* WELCOMEPAGE.JSX styles */
  .welcome-page {
    max-width: 100vw;
  }
  .hero-section {
    position: relative;
    height: 280px;
    flex-direction: column;
    align-items: center;
    border-radius: 0 0 35px 35px;
  }
  .hero-info-section {
    display: flex;
    flex-direction: column;
    /* justify-content: space-around; */
    align-items: center;
  }
  #anandi-welcome-page {
    margin: 0;
    margin-top: 12px;
    height: 45px;
  }
  .hero-section-text {
    margin: 0;
    margin-top: 30px;
    text-align: center;
    font-size: 28px;
    line-height: normal;
  }
  .sub-text {
    font-size: 22px;
  }
  #shop-now-btn {
    margin: 0;
    margin-top: 16px;
    height: 40px;
    width: 125px;
    font-size: 14px;
    box-shadow: none;
    background-color: rgb(204, 1, 1);
  }
  .gradient-welcome-image-section {
    z-index: -99;
    margin-top: 70px;
    position: absolute;
    width: 100%;
  }
  #gradient-mask {
    display: none;
  }
  #shop-image {
    height: 210px;
    width: 100%;
    object-fit: cover;
    opacity: 0.2;
  }
  
  .welcome-category-section-wrapper {
    margin-top: 20px;
    padding: 0 15px;
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
  }
  .welcome-category-title {
    margin: 0 0 8px 10px;
    font-size: 28px;
    font-weight: 600;
    color: #BC7575;
  }
  .welcome-category-section {
    width: 100%;
  }
  .welcome-categories {
    display: flex;
    width: 100%;
    flex-wrap: wrap;
    justify-content: center;
    gap: 10px;
  }
  .welcome-category {
    width: 160px;
    height: fit-content;
    flex-grow: 0;
    border-radius: 10px;
    box-shadow: 0 4px 8px grey;
  }
  .category-image {
    border-radius: 10px;
  }
  .category-text {
    margin: 10px 0;
    font-size: 20px;
    font-weight: 300;
    flex-grow: 0;
  }

  .shop-info-section {
    margin-top: 60px;
    padding: 0 15px;
    display: flex;
    align-items: center;
    flex-direction: column;
    gap: 40px;
  }
  .shop-info {
    width: 100%;
  }
  .shop-info-heading {
    padding-left: 12px;
    font-size: 28px;
    font-weight: 600;
    color: #BC7575;
  }
  .shop-info-text {
    padding-left: 12px;
    font-size: 16px;
  }
  iframe {
    margin-left: 1%;
    width: 98%;
    height: 200px;
    border-radius: 10px;
    box-shadow: 5px 5px 5px grey;
  }
  .social-container {
    margin: 0;
    height: fit-content;
    font-size: 35px;
    gap: 10px;
  }

  .welcome-page-footer {
    height: 90px;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 0;
    font-size: 16px;
    font-family: Outfit;
    font-weight: 600;
    color: maroon;
    background-color: #E0B0A5;
  }
  
  /* APP.JSX styles */
  .navbar {
    padding: 8px 5px;
    height: 50px;
    align-items: center;
    justify-content: center;
  }
  .nav-lefties {
    justify-content: center;
    width: fit-content;
    height: fit-content;
  }
  .hamburg-icon {
    display: block;
    cursor: pointer;
  }
  .fa-bars {
    margin-left: 5px;
    scale: 1.5;
  }
  #anandi, #anandi-prod-page-logo {
    display: none;
  }
  #anandi-mobile {
    display: block;
    margin: 0 10px;
    margin-left: 14px;
    height: 40px;
    cursor: pointer;
  }
  .categories-wrapper {
    display: none;
    margin: 0;
    flex-wrap: wrap;
    gap: 0;
  }
  .categories {
    font-size: 10px;
  }
  .nav-interact {
    gap: 2px;
    flex-grow: 1;
  }
  #search-icon {
    padding: 0 6px 0 12px;
  }
  #search-bar {
    font-size: 16px;
    flex-grow: 1;
  }
  .contact-btn {
    display: none;
  }
  .search-btn {
    margin-left: 3px;
    height: 100%;
    aspect-ratio: 1/1;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 50%;
    background-color: red;
  }
  .mobile-contact-btn {
    display: block;
  }
  .desktop-contact-btn {
    display: none;
  }


  .filter-section {
    z-index: 99;
    position: fixed;
    top: 0;
    left: -80vw;
    height: 100vh;
    width: 80vw;
    background-color: rgb(255, 255, 255);
    transition: all 0.2s ease-in-out;
    overflow: scroll;
  }
  #filter-heading-text {
    display: flex;
    justify-content: space-between;
  }
  .filter-close-btn {
    display: block;
    cursor: pointer;
  }
  #apply-filter-btn {
    margin: 0;
  }


  main {
    margin-top: 50px;
    padding: 0;
  }
  #main-seperator {
    display: none;
  }
  #item-count {
    display: none;
  }
  .product-section {
    padding: 0;
    width: 100%;
    gap: 1%;
  }
  .product-card {
    height: fit-content;
    margin-bottom: 10px;
    padding: 0;
    width: 49.5%;
  }
  .product-card:hover {
    box-shadow: none;
    border-radius: none;
  }
  .product-image-container {
    aspect-ratio: 3/4;
    width: 100%;
  }
  .product-image {
    width: 100%;
  }
  .product-name {
    height: fit-content;
    font-size: 14px;
  }
  .product-price {
    font-weight: 400;
  }
  .available-size {
    padding: 0 8px;
    font-size: 10px;
    border: 1px solid grey;
  }
  .product-color {
    margin-top: 5px;
    gap: 5px;
  }

  /* PRODUCTPAGE.JSX */
  .product-page-navbar {
    padding: 8px 5px;
    height: 50px;
    align-items: center;
    justify-content: center;
  }
  .fa-arrow-left {
    display: none;
  }
  #anandi-mobile {
    display: block;
    margin: 0 10px;
    margin-left: 14px;
    height: 40px;
    cursor: pointer;
  }
  .product-page {
    margin-top: 50px;
    padding: 20px 10px;
    flex-wrap: wrap;
  }
  .product-page-image-container {
    width: 100%;
    flex-wrap: nowrap;
    overflow: auto;
    scroll-snap-type: x mandatory;
  }
  .product-page-image-container::-webkit-scrollbar {
    height: 0;
  }
  .product-page-image {
    width: 90%;
    scroll-snap-align: center;
  }
  .product-page-prod-brand {
    margin: 0;
    margin: -5px 0;
    font-size: 28px;
  }
  .product-page-prod-name {
    font-size: 18px;
    font-weight: 300;
  }
  .prod-page-hr {
    margin: 10px 0;
    /* display: none; */
  }
  .product-page-prod-price {
    font-size: 25px;
  }
  .product-page-details {
    margin: 10px 0;
    padding: 0 12px;
    width: 100%;
  }
  .product-variant-wrapper {
    flex-direction: column;
  }
  .product-page-prod-variant {
    display: flex;
    padding: 10px 0;
  }
  .product-page-prod-variant:hover {
    background-color: white;
  }
  .prod-size {
    height: 50px;
    min-width: 80px;
    width: fit-content;
    border-radius: 14px;
    font-size: 16px;
    font-weight: 400;
    border: 2px solid grey;
  }
  .prod-color-wrapper {
    width: fit-content;
    display: flex;
    flex-direction: row;
  }
  .prod-color {
    margin: 0;
    margin-left: 10px;
    height: 40px;
    width: 45px;
    box-shadow: 0 0 2px black;
  }
  .product-like-btn {
    padding: 5px;
    font-size: 16px;
    height: 50px;
    width: 100%;
  }

  /* FOOTER.JSX */
  .footer {
    padding: 30px 14px;
    position: absolute;
    height: fit-content;
    flex-direction: column;
    gap: 20px;
    box-shadow: 0 0 4px black;
  }
  .footer-content {
    width: 100%;
  }
  .second {
    font-weight: 400;
    font-size: 15px;
  }
  .third {
    height: fit-content;
  }
}
.welcome-page {
    font-family: Outfit;
    /* transition: all 0.3s ease-in-out; */
}

.hero-section {
    position: relative;
    height: 580px;
    width: 100vw;
    display: flex;
    justify-content: space-between  ;
    border-radius: 0 0 90px 90px;
    font-family: Outfit;
    background-color: #E0B0A5;
    overflow: hidden;
}
.hero-info-section {
    flex-grow: 1;
    background-color: rgba(128, 128, 128, 0);
}
#anandi-welcome-page {
    margin-left: 66px;
    margin-top: 21px;
    height: 60px;
}
.hero-section-text {
    margin: 50px 0 0 100px;
    font-size: 48px;
    font-family: Outfit;
    color: #813434;
    line-height: 60px;
}
.sub-text {
    margin-top: -10px;
    font-size: 36px;
    font-weight: 300;
    color: black;
}
#shop-now-btn {
    display: block;
    margin: 20px 0 0 100px;
    height: 60px;
    width: 150px;
    display: flex;
    justify-content: center;
    align-items: center;
    text-decoration: none;
    font-size: 18px;
    border-radius: 14px;
    color: white;
    background-color: red;
    transition: all 0.15s ease-in-out;
    box-shadow: 4px 4px 4px black;
}
/* #shop-now-btn:hover {
} */
#shop-now-btn:active {
    box-shadow: none;
}

.gradient-welcome-image-section {   
    position: relative;
    display: flex;
    width: 60%;
}
#gradient-mask {
    z-index: 99;
    position: absolute;
    left: 0;
    height: 100%;
    width: 30%;
    background: linear-gradient(to right, #E0B0A5, #e0b0a5c5, #00000000);
}
#shop-image {
    height: 660px;
    width: 100%;
    object-fit: cover;
}


.welcome-category-section-wrapper {
    margin-top: -120px;
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}
.welcome-category-section {
    width: 90%;
}
.welcome-category-title {
    margin: 0 0 8px 12px;
    font-size: 42px;
    font-weight: 600;
    color: white;
}
.welcome-categories {
    display: flex;
    justify-content: center;
    gap: 33px;
}
.welcome-category {
    padding: 6px;
    height: 420px;
    /* flex-grow: 1; */
    width: 320px;
    display: flex;
    flex-direction: column;
    align-items: center;
    /* justify-content: center; */
    border-radius: 20px;
    background-color: white;
    box-shadow: 0 4px 20px grey;
    overflow: hidden;
    transition: all 0.1s ease-in-out;
    cursor: pointer;
}
.welcome-category:hover {
    scale: 1.05;
}
.category-image {
    height: 82%;
    width: 100%;
    border-radius: 20px;
    object-fit: cover;
}
.category-text {
    flex-grow: 1;
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 34px;
    font-family: Outfit;
    color: #414141;
}



.shop-info-section {
    margin-top: 70px;
    display: flex;
    justify-content: space-evenly;
}
.shop-info {
    height: fit-content;
    /* height: 428px; */
    width: fit-content;
    border-radius: 20px;
}
.shop-info-heading {
    padding-left: 12px;
    font-size: 56px;
    font-weight: 600;
    color: #BC7575;
}
.shop-info-text {
    padding-left: 12px;
    font-size: 32px;
}
iframe {
    /* margin-left: 1%; */
    width: 840px;
    height: 400px;
    border-radius: 20px;
    box-shadow: 5px 5px 5px grey;
}
.social-container {
    margin-top: 15px;
    padding: 0 20px;
    height: 50px;
    display: flex;
    justify-content: start;
    align-items: center;
    font-size: 50px;
    gap: 30px;
}


.welcome-page-footer {
    height: 130px;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 30px 30px 0 0 ;
    font-size: 30px;
    font-family: Outfit;
    font-weight: 600;
    color: red;
    background-color: #E0B0A5;
}

import React from 'react'

const Footer = () => {
  return (
    <>
      <div id='footer' className="footer">
        <div className="footer-content first">
          &copy; 2024 Anandi. All Rights Reserved.
        </div>
        <div className="footer-content second">
          Email: anandiwears@gmail.com <br />
          Contact: +91 9007724730 / +91 8582802440
        </div>
        <div className="footer-content third">
          <i className="fa-brands fa-square-whatsapp footer-socials"></i> <br /><br />
          <i className="fa-brands fa-facebook footer-socials"></i> <br />
          <a href="https://www.instagram.com/anandiwears/" target='_blank'><i  className="fa-brands fa-square-instagram footer-socials"></i></a>
        </div>
      </div>
    </>
  )
}

export default Footer

import { useState, useEffect } from 'react'
import Navbar from '../components/Navbar'
import FilterSection from '../components/FilterSection'
import Footer from '../components/Footer'
import { NavLink, useLocation } from 'react-router-dom'
import './App.css'

function App() {

  const location = useLocation();
  const query = new URLSearchParams(location.search);
  console.log(query.get('search'));

  const [product_list, setProduct_list] = useState([]);   //actual product list fetched from server
  const [searchInput, setSearchInput] = useState(query.get('search') || '');     //search input from searchbar or url query
  console.log(searchInput);

  //states for product filters
  //set methods are sent to FilterSection component using prop
  const [sizeFilters, setSizeFilters] = useState([]);
  const [colorFilters, setColorFilters] = useState([]);
  const [brandFilters, setBrandFilters] = useState([]);
  const [priceRangeFilters, setPriceRangeFilters] = useState([]);

  //accumulating all filters 
  const filters = {
    size: encodeURIComponent(sizeFilters.join('+')),
    color: encodeURIComponent(colorFilters.join('+')),
    brand: encodeURIComponent(brandFilters.join('+')),
    pricerange: encodeURIComponent(priceRangeFilters.join('+'))
  }

  //fetching all products from database on first render
  useEffect(() => {
    fetchProducts();
  }, []);


  //product fetch method
  async function fetchProducts() {
    try {
      let fetchURI;
      (searchInput!=='' || filters.size!=='' || filters.color!=='' || filters.brand!=='' || filters.pricerange!=='')?
        fetchURI = `http://192.168.1.18:9000/api/products?search=${searchInput}&size=${filters.size}&color=${filters.color}&brand=${filters.brand}&pricerange=${filters.pricerange}` : 
        fetchURI = `http://192.168.1.18:9000/api/products`;
      console.log(fetchURI);
      
      let result = await fetch(fetchURI);
      let data = await result.json();
      setProduct_list(data);
    }
    catch (error) {
      console.log(error);
    }
  }


  // JSX CONTENT
  return (
    <>
      <Navbar searchInput={searchInput} setSearchInput={setSearchInput} fetchProducts={fetchProducts}/>


      <main>
        <FilterSection
          setSizeFilters={setSizeFilters}
          setColorFilters={setColorFilters}
          setBrandFilters={setBrandFilters}
          setPriceRangeFilters={setPriceRangeFilters}
          fetchProducts={fetchProducts}
        />

        <div id="main-seperator"></div>

        <div className="product-section">
          <div id="item-count" style={{ width: "100%", fontSize: "18px", color: "grey" }}>
            {product_list.length} Items
          </div>

          {/* product card iteration */}
          {product_list.map(product => (
            <NavLink to={`/product/${product.prod_id}`} className="product-card" key={product.prod_id}>
              <div className="product-image-container">
                <img className="product-image" src={product.prod_images[0]} alt="" />
              </div>
              <div className="product-info">
                <div className="product-brand">{product.prod_brand}</div>
                <div className="product-name">{product.prod_name}</div>
                <div className="product-size">
                  {product.prod_sizes.map((prod_size, index) => (
                    <div className="available-size" key={index}>{prod_size}</div>
                  ))}
                </div>
                <div className="product-color">
                  {product.prod_colors.map((prod_color, index) => (
                    <div className="color" key={index} style={{ backgroundColor: prod_color }}></div>
                  ))}
                </div>
                <div className="product-price">Rs. {product.prod_price}</div>
              </div>
            </NavLink>
          ))}
        </div>

      </main>


      <Footer />
    </>
  )
}

export default App

* {
  box-sizing: border-box;
  outline: none;
  font-family: Poppins;
  z-index: 0;
  padding: 0;
  margin: 0;
}

body {
  margin: 0;
  padding: 0;
  font-size: 16px;
}

body::-webkit-scrollbar {
  width: 0;
}

/* NAVBAR  */
.navbar {
  z-index: 99;
  position: fixed;
  top: 0;
  height: 80px;
  width: 100%;
  padding: 16px 50px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  box-shadow: 0 0 8px black;
  background-color:white;
}

.hamburg-icon {
  display: none;
}
#anandi {
  margin-left: 0;
  height: 100%;
  cursor: pointer;
}
#anandi-mobile {
  display: none;
}

.nav-lefties {
  display: flex;
  align-items: center;
  height: 100%;
}

.categories-wrapper {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-left: 40px;
  height: 100%;
  gap: 20px;
}

.categories {
  display: flex;
  align-items: center;
  height: 100%;
  font-size: 18px;
  text-decoration: none;
  color: black;
  transition: all 0.1s ease-in-out;
  cursor: pointer;
}

.categories:hover {
  border-bottom: 4px solid red;
  color: red;
}

.nav-interact {
  height: 100%;
  width: 40%;
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 10px;
}

#search-bar-container {
  display: flex;
  align-items: center;
  height: 100%;
  width: 100%;
}

.fa-magnifying-glass {
  color: grey;
}

#search-icon {
  padding: 0 6px 0 20px;
  display: flex;
  align-items: center;
  height: 100%;
  /* width: 100%; */
  border-radius: 28px 0 0 28px;
  background-color: #a7a7a794;
}

#search-bar {
  /* padding: 0 15px; */
  height: 100%;
  width: 90%;
  border: none;
  border-radius: 0 28px 28px 0;
  font-size: large;
  background-color: #a7a7a794;
}
.search-btn {
  display: none;
}
.contact-btn {
  display: flex;
  align-items: center;
  height: 100%;
  padding: 12px 12px;
  border-radius: 300px;
  /* border: 3px solid #ff1500; */
  font-size: smaller;
  text-align: center;
  color: white;
  /* background-color: rgb(255, 14, 14); */
  background-color: red;
  cursor: pointer;
  white-space: nowrap;
  box-sizing: border-box;
  transition: all 0.15s ease-in-out;
}
.desktop-contact-btn {
  display: block;
}
.mobile-contact-btn {
  display: none;
}

.contact-btn:hover {
  scale: 1.2;
  color: red;
  background-color: white;
}
.contact-details-wrapper {
  position: absolute;
  top: 0;
  left: 0;
  height: 100vh;
  width: 100vw;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: rgba(0, 0, 0, 0.5);
}
.contact-details {
  padding: 25px;
  height: 50vh;
  width: 50vw;
  border-radius: 30px;
  background-color: white;
}
.contact-us-title {
  display: flex;
  justify-content: space-between;
  align-items: center;
  color: rgb(59, 59, 59);
}
.contact-close-btn {
  cursor: pointer;
}
.contacts {
  margin: 20px 0;
  padding: 8px 12px;
  padding-left: 50px;
  display: flex;
  justify-content: start;
  align-items: center;
  font-size: 25px;
  font-weight: 300;
  color: white;
  background-color: #af5d44b7;
  border-radius: 10px;
}
.fa-phone, .fa-envelope {
  margin-right: 50px;
}
.hidden {
  display: none;
}

/* MAIN */
main {
  margin-top: 80px;
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: flex-start;
}

.filter-section {
  height: 100%;
  width: 20%;
  padding: 20px;
  overflow: auto;
}

.filter-section::-webkit-scrollbar {
  width: 0;
}

#filter-heading-text {
  margin: 0;
  font-size: 25px;
  font-weight: 500;
  color: rgb(39, 39, 39);
}
.filter-close-btn {
  display: none;
}

.filters {
  margin: 15px 0;
}

.filter-headings {
  margin-top: 10px;
  margin-bottom: 6px;
  font-size: 20px;
  border-radius: 6px;
  cursor: pointer;
  user-select: none;
  font-weight: 500;
  transition: all 0.2s ease-in-out;
}
.filter-headings::marker {
  content: '';
}
details summary::before {
  content: ">";
  scale: 1.5;
  font-weight: bold;
  display: inline-block;
  margin-right: 10px;
  transition: transform 0.3s ease;
}
details[open] summary::before {
  transform: rotate(90deg);
}



.filter-options {
  margin: 2px 0;
  padding: 0 10px;
  display: flex;
  align-items: center;
  width: 100%;
  font-size: 14px;
  gap: 8px;
  user-select: none;
}
.filter-options:hover {
  background-color: rgb(238, 238, 238);
}
label {
  cursor: pointer;
}
.checkbox {
  margin: 0;
  scale: 1.3;
}
.filter-color {
  height: 14px;
  border: 1px solid rgb(134, 134, 134);
}

#apply-filter-btn {
  margin: 20px 0;
  width: 100%;
  height: 40px;
  font-size: 18px;
  font-weight: 500;
  border: 2px solid red;
  color: red;
  background-color: white;
  transition: all 0.2s ease-in-out;
  cursor: pointer;
}

#apply-filter-btn:hover {
  background-color: red;
  color: white;
}



#main-seperator {
  margin: 20px 0;
  height: 95%;
  width: 2px;
  border-radius: 2px;
  background-color: rgba(143, 143, 143, 0.568);
}



.product-section {
  height: 100vh;
  width: 100%;
  padding: 20px;
  display: flex;
  flex-wrap: wrap;
  align-content: flex-start;
  overflow: scroll;
  gap: 20px;
  font-size: 12px;
}

.product-section::-webkit-scrollbar {
  height: 0;
  width: 0;
}

#item-count {
  height: fit-content;
}
.added-filters-section {
  width: 100%;
  height: 20px;
  font-size: 16px;
}

.product-card {
  padding: 8px;
  height: 456px;
  width: 250px;
  transition: all 0.1s ease-in-out;
  cursor: pointer;
  text-decoration: none;
}

.product-card:hover {
  /* background-color: #e4e4e4; */
  box-shadow: 0 0 15px rgba(128, 128, 128, 0.5);
  border-radius: 8px;
}

.product-image-container {
  box-sizing: border-box;
  /* height: 310px; */
  width: 235px;
  aspect-ratio: 3/4;
  overflow: hidden;
}
.product-image {
  overflow: hidden;
  width: 100%;
  height: 100%;
  transition: all 0.15s ease-in-out;
}
.product-card:hover .product-image {
  scale: 1.1;
}

.product-info {
  padding: 0 5px;
}

.product-brand {
  height: 30px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  font-weight: 600;
  font-size: 18px;
  color: rgb(59, 59, 59);
}
.product-name {
  margin-bottom: 8px;
  margin-top: -5px;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  font-size: 15px;
  color: rgb(59, 59, 59);
}

.product-size {
  /* margin-top: 2px; */
  display: flex;
  color: grey;
  gap: 6px;
}

.available-size {
  width: fit-content;
  padding: 0 10px;
  border: 2px solid grey;
  border-radius: 15px;
}

.product-color {
  margin-top: 6px;
  display: flex;
  gap: 10px;
}

.color {
  height: 20px;
  aspect-ratio: 1/1;
  border-radius: 50%;
  border: 1px solid grey;
}

.product-price {
  /* margin: 5px 0; */
  font-weight: 600;
  font-size: 18px;
  color: rgb(59, 59, 59);
}

/* FOOTER */
.footer {
  margin-top: 80px;
  display: flex;
  justify-content: space-around;
  align-items: center;
  height: 100px;
  width: 100%;
  /* box-shadow: 0 0 8px black; */
  background-color: #be745e69;
}

.footer-content {
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  width: 33.33%;
}

.first {
  font-weight: bold;
  color: red;
}
.second,
.third {
  font-size: large;
  font-weight: 500;
  gap: 16px;
}
.second {
  font-size: 16px;
  color: #af5d44;
}
.footer-socials {
  scale: 2;
}
.fa-square-whatsapp {
  color: green;
}
.fa-facebook {
  color: #3578e5;
}
.fa-square-instagram {
  color: rgb(170, 18, 119);
}

import React, { useState } from 'react';
import { useLocation, useNavigate } from 'react-router-dom';

const FilterSection = ({ setSizeFilters, setColorFilters, setBrandFilters, setPriceRangeFilters, fetchProducts }) => {


  const sizeFilters = ['M', 'L', 'XL', 'XXL', '3XL', '4XL', '5XL', 'Free-size'];
  const brandFilters = ['Arriba', 'Comfort Lady', 'FITS&FAB', 'Gemini', 'Koyena', 'Priincezz', 'Satyajit'];
  const priceRangeFilters = ['199-399', '400-599', '600-799', '800-999', '1000-1299'];
  const colorFilters = [
    'maroon', 'red', 'darkgoldenrod', 'tan', 'orange', 'yellow', 'indianred', 'dodgerblue',
    'blue', 'darkblue', 'olive', 'darkolivegreen', 'lightgray',
    'cadetblue', 'darkseagreen','crimson', 'palevioletred', 'thistle', 'pink', 'hotpink',
    'cornflowerblue', 'navajowhite', 'lightsteelblue', 'midnightblue', 'slategrey',
    '#022b42', '#24465c'
  ];


  //taking size filter inputs
  function sizeFilterHandler(event) {
    const { value, checked } = event.target;
    setSizeFilters(prev =>
      checked ? [...prev, value] : prev.filter(size => size !== value)
    );
  }

  //taking color filter inputs
  function colorFilterHandler(event) {
    const { value, checked } = event.target;
    setColorFilters(prev =>
      checked ? [...prev, value] : prev.filter(color => color !== value)
    );
  }

  //taking brand filter inputs
  function brandFilterHandler(event) {
    const { value, checked } = event.target;
    setBrandFilters(prev =>
      checked ? [...prev, value] : prev.filter(brand => brand !== value)
    );
  }

  //taking price range filter inputs
  function priceRangeFilterHandler(event) {
    const { value, checked } = event.target;
    setPriceRangeFilters(prev =>
      checked ? [...prev, value] : prev.filter(priceRange => priceRange !== value)
    );
  }



  //APPLY FILTERS button onclick
  function applyFiltersHandler() {
    console.log('apply filter btn clicked');
    fetchProducts();
    const filterSection = document.querySelector('.filter-section');
    filterSection.style.left = '-80vw';
    window.scrollTo({ top: -100, behavior: 'smooth' });
  }

  // Function-close the FILTER SECTION
  function filterCloseHandler() {
    const filterSection = document.querySelector('.filter-section');
    filterSection.style.left = '-80vw';
  }


  return (
    <>
      <div className="filter-section" style={{ paddingLeft: "1.5%" }}>
        <div className='' style={{ textAlign: 'end' }}></div>
        <h2 id="filter-heading-text">
          Filters <i className="fa-solid fa-xmark filter-close-btn" onClick={filterCloseHandler}></i>
        </h2>
        <hr style={{ margin: "5px -4px" }} />

        <div className="filter-categories">
          {/* Size filters */}
          <details className="filters size" open>
            <summary className="filter-headings">Sizes</summary>
            {sizeFilters.map((size, index) => (
              <div className="filter-options" key={index}>
                <input id={size} type="checkbox" className="checkbox" value={size} name="checkbox" onChange={sizeFilterHandler} />
                <label htmlFor={size}>
                  {size}
                  {size === 'M' && ' (38in)'}
                  {size === 'L' && ' (40in)'}
                  {size === 'XL' && ' (42in)'}
                  {size === 'XXL' && ' (44in)'}
                  {size === '3XL' && ' (46in)'}
                  {size === '4XL' && ' (48in)'}
                  {size === '5XL' && ' (50in)'}
                </label>
              </div>
            ))}
          </details>

          {/* Color filters */}
          <details className="filters colors" open>
            <summary className="filter-headings">Colors</summary>
            {colorFilters.map((color, index) => (
              <div className="filter-options" key={index}>
                <input id={color} type="checkbox" className="checkbox" value={color} name="checkbox" onChange={colorFilterHandler} />
                <div className="color filter-color" style={{ backgroundColor: color }}></div>
                <label htmlFor={color}>{color}</label>
              </div>
            ))}
          </details>

          {/* Brand filters */}
          <details className="filters brand" open>
            <summary className="filter-headings">Brands</summary>
            {brandFilters.map((brand, index) => (
              <div className="filter-options" key={index}>
                <input id={brand} type="checkbox" className="checkbox" value={brand} name="checkbox" onChange={brandFilterHandler} />
                <label htmlFor={brand}>{brand}</label>
              </div>
            ))}
          </details>

          {/* Price filters */}
          <details className="filters price" open>
            <summary className="filter-headings">Price Range</summary>
            {priceRangeFilters.map((priceRange, index) => (
              <div className="filter-options" key={index}>
                <input id={priceRange} type="checkbox" className="checkbox" value={priceRange} name="checkbox" onChange={priceRangeFilterHandler} />
                <label htmlFor={priceRange}>Rs. {priceRange.replace('-', ' to ')}</label>
              </div>
            ))}
          </details>

          <button id="apply-filter-btn" onClick={applyFiltersHandler}>Apply Filters</button>
        </div>
      </div>
    </>
  );
}

export default FilterSection;

import React, { useEffect, useState } from 'react';
import { useNavigate, useParams } from 'react-router-dom';
import Navbar from '../components/Navbar';
import './ProductPage.css'
import Footer from '../components/Footer';

const ProductPage = () => {
    const { id } = useParams();
    const [product_details, setProduct_details] = useState();

    const navigate = useNavigate;

    useEffect(() => {
        async function getProduct() {
            try {
                const result = await fetch(`http://192.168.1.18:9000/api/products/${id}`);
                // console.log('ProdPage.jsx 15:   ', result);
                const data = await result.json();
                // console.log(data[0]);
                setProduct_details(data[0]);
            }
            catch (error) {
                console.log(error);
            }
        }
        getProduct();
    }, []);


    function likeBtnHandler() {
        alert("Product Liked");
    }

    function backClickHandler() {
        window.location.href = '/home';
    }

    function logoClickHandler(params) {
        window.location.href = '/home';
    }
    



    // JSX Content
    return (
        <>
            {/* <Navbar fetchProducts={dummyFetchProducts} setSearchInput={dummySetSearchInput} /> */}
            <div className="product-page-navbar">
                <i className="fa-solid fa-arrow-left" onClick={backClickHandler}></i>
                <img id='anandi-prod-page-logo' src="/anandi-logo.png" alt="" onClick={logoClickHandler} />
                <img id="anandi-mobile" src="/anandi-logo.png" alt="" onClick={logoClickHandler} />
            </div>


            <div className="product-page-container">
                {product_details ? (
                    <div className="product-page">
                        {product_details.prod_images && (
                            <div className='product-page-image-container'>
                                {product_details.prod_images.map((image, index) => (
                                    <img className='product-page-image' key={index} src={image} alt="" />
                                ))}
                            </div>
                        )}

                        <div className="product-page-details">
                            <div className='product-page-prod-brand'>{product_details.prod_brand}</div>
                            <div className='product-page-prod-name'>{product_details.prod_name}</div>
                            <hr className='prod-page-hr' />
                            <div className="product-page-prod-price">MRP Rs.{product_details.prod_price}</div>
                            <div style={{ color: 'grey' }}>Inclusive of all taxes</div>

                            {product_details.in_stock ? (
                                <div style={{ color: 'green', fontSize: '30px', fontWeight: 600 }}>In Stock</div>
                            ) : (
                                <div style={{ color: 'red', fontSize: '30px', fontWeight: 600 }}>Out of Stock</div>
                            )}

                            {product_details.prod_variants && (
                                <div className="product-variant-wrapper">
                                    {product_details.prod_variants.map((variant, index) => (
                                        <div className="product-page-prod-variant" key={index}>
                                            <div className="prod-size">{variant.size}</div>
                                            <div className="prod-color-wrapper">
                                                {variant.colors.map((color, index) => (
                                                    <div className='prod-color' key={index} style={{ backgroundColor: color }}></div>
                                                ))}
                                            </div>
                                        </div>
                                    ))}
                                </div>
                            )}

                            <button className="product-like-btn" onClick={likeBtnHandler}>
                                <i className="fa-solid fa-heart"></i>
                                Like this product
                            </button>
                            <br />
                            <b>NOTE:</b> <br />
                            1. Color shown in images may differ from actual product. <br />
                            2. Contact store to inquire about size and colour availability (Scroll to bottom).
                        </div>
                    </div>
                ) : (
                    <div className="loader"></div>
                )}
            </div>


            <Footer />
        </>
    )
}

export default ProductPage;

.hamburg-icon {
    display: none;
}
.product-page-navbar {
    z-index: 99;
    position: absolute;
    top: 0;
    display: flex;
    align-items: center;
    padding: 16px 50px;
    height: 80px;
    width: 100%;
    box-shadow: 0 0 8px black;
    background-color: white;
}
.fa-arrow-left {
    font-size: 30px;
    cursor: pointer;
    padding: 8px;
    border-radius: 50%;
}
.fa-arrow-left:hover {
    background-color: rgb(204, 204, 204);
}
#anandi-prod-page-logo {
    height: 100%;
    margin-left: 20px;
}
.product-page-container {
    width: 100vw;
    min-height: 100vh;
    display: flex;
    justify-content: center;
}
.product-page {
    width: 100%;
    max-width: 100vw;
    margin: 80px 0;
    padding: 0 50px;
    padding-top: 40px;
    display: flex;
    justify-content: center;
    min-height: 100vh;
}

.product-page-image-container {
    width: 750px;
    display: flex;
    flex-wrap: wrap;
    justify-content: flex-start;
    align-items: start;
    gap: 1%;
}
.product-page-image {
    margin-bottom: 1%;
    width: 49.5%;
    flex-grow: 1;
    height: fit-content;
    border-radius: 25px;
}

.product-page-details {
    width: 600px;
    margin-left: 80px;
}
.product-page-prod-brand {
    margin-left: -3px;
    font-weight: 600;
    font-size: 40px;
    color: rgb(51, 51, 51);
}
.product-page-prod-name {
    font-weight: 400;
    font-size: 25px;
    color: rgb(99, 99, 99);
}
.prod-page-hr {
    margin: 20px 0;
}
.product-page-prod-price {
    margin-bottom: -10px;
    font-weight: 600;
    font-size: 35px;
    color: rgb(85, 85, 85);
}
.product-variant-wrapper {
    margin: 20px 0;
    display: flex;
}
.product-page-prod-variant {
    padding: 10px 15px;
    border-radius: 20px;
    text-align: center;
    transition: all 0.15s ease-in-out;
    cursor: pointer;
    user-select: none;
}
.product-page-prod-variant:hover {
    background-color: rgb(219, 219, 219);
}
.prod-size {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 70px;
    min-width: 70px;
    width: fit-content;
    padding: 0 5px;
    font-size: 26px;
    font-weight: 600;
    color: rgb(51, 51, 51);
    border: 3px solid grey;
    border-radius: 35px;
}
.prod-color-wrapper {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}
.prod-color {
    height: 50px;
    width: 100%;
    margin-top: 12px;
    border-radius: 120px;
    box-shadow: 0 0 10px black;
}
.product-like-btn {
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 10px 0;
    padding: 14px 0;
    width: 100%;
    height: fit-content;
    font-size: 24px;
    border: 3px solid red;
    font-weight: 500;
    color: red;
    background-color: white;
    cursor: pointer;
    transition: all 0.15s ease-in-out;
    gap: 30px;
}
.product-like-btn:hover {
    color: white;
    background-color: red;
    border-radius: 20px;
}
.product-like-btn:active {
    box-shadow: 0 0 30px black inset;
}


.loader {
    width: 48px;
    height: 48px;
    margin: auto;
    position: relative;
  }
  
  .loader:before {
    content: '';
    width: 48px;
    height: 5px;
    background: #f0808050;
    position: absolute;
    top: 60px;
    left: 0;
    border-radius: 50%;
    animation: shadow324 0.5s linear infinite;
  }
  
  .loader:after {
    content: '';
    width: 100%;
    height: 100%;
    background: #f08080;
    position: absolute;
    top: 0;
    left: 0;
    border-radius: 4px;
    animation: jump7456 0.5s linear infinite;
  }
  
  @keyframes jump7456 {
    15% {
      border-bottom-right-radius: 3px;
    }
  
    25% {
      transform: translateY(9px) rotate(22.5deg);
    }
  
    50% {
      transform: translateY(18px) scale(1, .9) rotate(45deg);
      border-bottom-right-radius: 40px;
    }
  
    75% {
      transform: translateY(9px) rotate(67.5deg);
    }
  
    100% {
      transform: translateY(0) rotate(90deg);
    }
  }
  
  @keyframes shadow324 {
  
    0%,
      100% {
      transform: scale(1, 1);
    }
  
    50% {
      transform: scale(1.2, 1);
    }
  }

  import React, { useEffect, useState } from 'react';

const Navbar = ({ setSearchInput, fetchProducts }) => {

    const [clickedCategory, setClickedCategory] = useState();   //dummy searchInput state to call fetchProducts()

    //to open the FILTER SECTION
    function hamburgClickHandler() {
        const filterSection = document.querySelector('.filter-section');
        filterSection.style.left = '0vw';
    }

    //return home when logo is clicked
    function logoClickHandler() {
        window.location.href = '/';
    }

    //when a category is clicked
    function handleCategoryWrapperClick(event) {
        if (event.target.classList.contains('categories')) {
            setSearchInput(event.target.innerText);
            setClickedCategory(event.target.innerText);
        }
    }
    /* used 'clickedCategory' since using fetchProducts() in above handler won't work
    as searchInput state isn't updated instantly */
    //so when clickedCategory state is updated, searchInput state is updated and then fetchProducts is called
    useEffect(() => {
        fetchProducts();
    }, [clickedCategory]);


    //searching from searchbar
    function handleSearch(event) {
        if (event.key === 'Enter') {
            fetchProducts();
        }
    }

    function handleInputChange(event) {
        setSearchInput(event.target.value);
    }

    function showContactDetails() {
        const contactDetails = document.querySelector('.contact-details-wrapper');
        contactDetails.classList.remove('hidden');
    }
    function closeContactDetails() {
        const contactDetails = document.querySelector('.contact-details-wrapper');
        contactDetails.classList.add('hidden');
    }

    return (
        <>
            <header>
                {/* navbar */}
                <div className="navbar">
                    <div className="nav-lefties">
                        <i className="fa-solid fa-bars hamburg-icon" onClick={hamburgClickHandler}></i>

                        <img id="anandi" src="/anandi-logo.png" alt="" onClick={logoClickHandler} />
                        <img id="anandi-mobile" src="/anandi-favicon.png" alt="" onClick={logoClickHandler} />

                        <div className="categories-wrapper" onClick={handleCategoryWrapperClick}>
                            <a href='#' className="categories">Kurti</a>
                            <a href='#' className="categories">Leggings</a>
                            <a href='#' className="categories">Palazzo</a>
                            <a href='#' className="categories">House-coat</a>
                            <a href='#' className="categories">Nightwear</a>
                        </div>
                    </div>

                    <div className="nav-interact">
                        <div id="search-bar-container">
                            <i id="search-icon" className="fa-solid fa-magnifying-glass"></i>
                            <input id="search-bar" type="text" placeholder="Search item..." onKeyDown={handleSearch} onChange={handleInputChange} />
                        </div>
                        <div className="search-btn">
                            <i className="fa-solid fa-magnifying-glass" style={{ color: 'white' }} onClick={handleSearch}></i>
                        </div>

                        <div className="contact-btn" onClick={showContactDetails}>
                            <div className="desktop-contact-btn">CONTACT US</div>
                        </div>
                        <div className="contact-details-wrapper hidden">
                            <div className="contact-details">
                                <h2 className='contact-us-title'>
                                    Contact Us
                                    <i className="fa-solid fa-xmark contact-close-btn" onClick={closeContactDetails}></i>
                                </h2>

                                <hr />
                                <div className='contacts contact-number'>
                                    <i className="fa-solid fa-phone"></i>
                                    +91 90077 24730 / +91 85828 02440
                                </div>
                                <div className="contacts contact-email">
                                    <i className="fa-solid fa-envelope"></i>
                                    anandiwears@gmail.com
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </header>
        </>
    )
}

export default Navbar

const express = require('express');
const path = require('path');
const cors = require('cors');
require('dotenv').config();
const database = require('./database.js');

const app = express();
app.use(cors());

//testing if server working
app.get('/', (req, res)=> {
    res.send("Server is online.");
});

//path to fetch products on home page
app.get('/api/products', async (req, res)=>{
    console.log('server.js 18:  ', Object.keys(req.query).length, req.query);

    if (Object.keys(req.query).length !== 0) res.json(await database.getFilteredProducts(req.query));
    else res.json(await database.getAllProducts());
});

//displaying particular product with product ID
app.get('/api/products/:id', async(req, res)=>{
    const productID = req.params.id;
    res.json(await database.getProduct(productID));
});


//sever application listening to...
const port = process.env.PORT || 8001;
app.listen(port, ()=>console.log(`listening to http://127.0.0.1:${port}`));

const { MongoClient, ServerApiVersion } = require('mongodb');
require('dotenv').config();

const uri = process.env.DATABASE_URI;
const database = process.env.DATABASE_NAME; 
const client = new MongoClient(uri, {
    serverApi: {
        version: ServerApiVersion.v1,
        strict: true,
        deprecationErrors: true,
    }
});

//returning ALL products
async function getAllProducts() {
    try {
        await client.connect();
        console.log('database.js 12:    connected to db');

        const result = await client.db(database).collection('Products').find({}).toArray();
        return result;
    }
    catch (error) {
        console.log(error);
    }
    finally {
        await client.close();
    }

}

//returning filtered products
async function getFilteredProducts(filters) {
    console.log('database.js 36:    ', filters);

    /* const query = {
        prod_name: { $regex: "satyajit", $options: "i" },
        prod_sizes: { $in: ["L", "XL"] },
        prod_colors: { $in: ["red", "black"] },
        prod_brand: { $in: ["FITS&FAB", "Satyajit"] },
        $or: [
            { prod_price: { $gt: 100, $lt: 1000 } },
            { prod_price: { $gt: 1500, $lt: 2000 } }
        ]
    }; */
    //above->format for creating mongodb filters
    //below->creating filters
    const query = {}
    if (filters.search !== '') query.prod_name = { $regex: filters.search, $options: 'i' };
    if (filters.size !== '') query.prod_sizes = { $in: filters.size.split('+') };
    if (filters.color !== '') query.prod_colors = { $in: filters.color.split('+') };
    if (filters.brand !== '') query.prod_brand = { $in: filters.brand.split('+') };
    if (filters.pricerange !== '') {
        const priceConditions = filters.pricerange.split('+').map(range => {
            const [minPrice, maxPrice] = range.split('-').map(Number);
            return { prod_price: { $gt: minPrice - 1, $lt: maxPrice + 1 } };
        });
        query.$or = priceConditions;
    }

    try {
        await client.connect();
        const result = await client.db(database).collection('Products').find(query).toArray();
        return result;
    }
    catch (error) {
        console.log(error);
    }
    finally {
        await client.close();
    }
}

//returning specific product with PRODUCT ID
async function getProduct(productID) {
    try {
        await client.connect();
        console.log('database.js 27:    connected to db');

        const result = await client.db(database).collection('Products').find({ prod_id: productID }).toArray();
        console.log('database.js 30:    ', result);
        return result; 
    }
    catch (error) {
        console.log(error);
    }
    finally {
        await client.close();
    }
}

module.exports = {
    getAllProducts,
    getFilteredProducts,
    getProduct
}